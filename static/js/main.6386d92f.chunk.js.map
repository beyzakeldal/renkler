{"version":3,"sources":["components/Sidebar.js","components/Search.js","components/Contrast.js","components/Coppied.js","components/Brand.js","components/Content.js","App.js","index.js"],"names":["Sidebar","props","useState","modalIsOpen","setmodalIsOpen","toggleModal","className","onClick","isOpen","onRequestClose","overlayClassName","ariaHideApp","Search","brandsArray","setBrands","search","setSearch","useEffect","filter","brand","title","toLowerCase","includes","type","placeholder","onChange","e","target","value","getContrastYIQ","hexcolor","length","parseInt","substr","Copied","color","Brand","selected","handleClick","copied","timeout","setTimeout","setCopied","clearTimeout","colors","map","component","onSuccess","setColor","style","index","Content","Object","keys","BrandsData","key","push","brands","selectedBrands","setSelectedBrands","updates","findIndex","i","slug","tagName","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6386d92f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { GrClose } from \"react-icons/gr\"; \r\n\r\nfunction Sidebar(props) {\r\n\r\n    const [modalIsOpen, setmodalIsOpen] = useState(false)\r\n\r\n    // const closeModal= () =>{\r\n    //     setmodalIsOpen(false)\r\n    // }\r\n    // const openModal= () => {\r\n    //     setmodalIsOpen(true)\r\n    // }\r\n    const toggleModal = () => {\r\n        setmodalIsOpen(!modalIsOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <aside className=\"sidebar\">\r\n                <div className=\"logo\">\r\n                    <span>Brand<b>Colors</b></span>\r\n                </div>\r\n                <div className=\"description\">\r\n                    The biggest collection of official brand color codes around. Curated by @brandcolors and friends.\r\n                </div>\r\n                <nav className=\"menu\">\r\n                    <ul>\r\n                        <li>\r\n                            <strong onClick={toggleModal}>Suggest a Brand</strong>\r\n                        </li>\r\n                        <li>\r\n                            <strong onClick={toggleModal}>About BrandColors</strong>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </aside>\r\n\r\n\r\n            <Modal \r\n                isOpen={modalIsOpen}\r\n                onRequestClose={toggleModal}\r\n                className=\"about-modal\"\r\n                overlayClassName=\"about-modal-overlay\"\r\n                ariaHideApp={false}\r\n            >\r\n                <button className=\"modal-close-btn\"  onClick={toggleModal}> <GrClose /></button>\r\n                <h3>About BrandColors</h3>\r\n                <p>The biggest collection of official brand color codes around. Curated by @brandcolors and friends.</p>\r\n                <p>This is the place to suggest color additions or updates, report bugs, or pitch ideas for BrandColors.</p>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default Sidebar;","import React, { useEffect, useState } from 'react';\r\nimport {GrSearch} from \"react-icons/gr\";\r\n\r\n\r\nfunction Search({brandsArray,setBrands}){\r\n    \r\n    const [search,setSearch] = useState('');\r\n    \r\n    useEffect(()=>{\r\n        setBrands(brandsArray.filter(brand => brand.title.toLowerCase().includes(search)))\r\n    },[search])\r\n    \r\n    return(\r\n        <div className=\"search\"> \r\n            <div className=\"icon\">\r\n            <GrSearch />\r\n            </div>\r\n            <input type=\"text\" placeholder=\"Search Brands\" onChange={(e=>setSearch(e.target.value))}></input>\r\n        </div>\r\n    );\r\n}\r\nexport  default Search;","\r\n\r\nconst getContrastYIQ=(hexcolor) => {\r\n\tif ( hexcolor.length !== 6 ) return 'white';\r\n\tvar r = parseInt(hexcolor.substr(0,2),16);\r\n\tvar g = parseInt(hexcolor.substr(2,2),16);\r\n\tvar b = parseInt(hexcolor.substr(4,2),16);\r\n\tvar yiq = ((r*299)+(g*587)+(b*114))/1000;\r\n\treturn (yiq >= 128) ? 'black' : 'white';\r\n}\r\nexport {\r\n    getContrastYIQ\r\n    \r\n}","\r\nfunction Copied({color}){\r\n    return(<>\r\n    <div className=\"copied\">\r\n       copied #{color} to clipboard\r\n    </div>\r\n    </>\r\n    );\r\n}\r\nexport default Copied;","import React, { useEffect, useState } from 'react';\r\nimport { getContrastYIQ } from './Contrast';\r\nimport Clipboard from 'react-clipboard.js';\r\nimport Copied from './Coppied';\r\n\r\nexport default function Brand({ selected, brand, handleClick }) {\r\n\r\n    useEffect(() => {\r\n        if (copied) {\r\n            const timeout=\r\n             setTimeout(() => {\r\n                setCopied(false)\r\n            }, 1000)\r\n            return() =>{\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n    })\r\n    const [copied, setCopied] = useState(false);\r\n    const setColor = (color) => {\r\n        setCopied(color)\r\n    }\r\n    return <>\r\n\r\n        {selected ? <>\r\n            <div className=\"brand-selected\" onClick={(e) => handleClick(e, brand)}>\r\n                <h5>{brand.title} </h5>\r\n                <div className=\"brand-colors-selected\">\r\n                    {/* { JSON.stringify(selected) } */}\r\n                    {brand.colors.map(color => (\r\n                        <><Clipboard  component=\"span\" onSuccess={() => setColor(color)} data-clipboard-text={'#' + color} style={{ '--bgColor': '#' + color, '--textColor': getContrastYIQ(color) }}>\r\n                            {'#' + color}\r\n                        </Clipboard>\r\n                            {copied && <Copied color={copied} />}\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n        </> : <>\r\n            <div className=\"brand\" onClick={(e) => handleClick(e, brand)}>\r\n                <h5>{brand.title}</h5>\r\n                <div className=\"brand-colors\">\r\n                    {/* { JSON.stringify(selected) } */}\r\n                    {brand.colors.map((color,index) => (\r\n                        <span key={index} style={{ '--bgColor': '#' + color, '--textColor': getContrastYIQ(color) }}>{color}</span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>}\r\n    </>;\r\n}","import React, { useState } from 'react';\r\nimport Search from './Search';\r\nimport BrandsData from '../brand.json';\r\nimport Brand from './Brand';\r\n\r\n\r\nfunction Content() {\r\n\r\n    const brandsArray = []\r\n    Object.keys(BrandsData).map(key => {\r\n        // console.log(Object.keys(brandsArray));\r\n      return  brandsArray.push(BrandsData[key])\r\n    });\r\n    // bundan sonra listeleme yapıcaz;\r\n    const [brands, setBrands] = useState(brandsArray);//useState'in başlangıç değeri brandsArray.\r\n\r\n    const [selectedBrands, setSelectedBrands] = useState([]);    \r\n \r\n    const handleClick = (e, brand) => {\r\n\r\n       \r\n        let updates = [...selectedBrands];\r\n        const index = updates.findIndex(i => i === brand.slug);\r\n\r\n        if (index === -1) {\r\n            // şu an yok\r\n            updates.push(brand.slug);\r\n        } else {\r\n            // olanı kaldır\r\n            if ( e.target.tagName === 'SPAN' ) return false;\r\n            updates.splice(index, 1);\r\n        }\r\n        setSelectedBrands(updates);\r\n    }\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <header  className=\"header\">\r\n                <Search brandsArray={brandsArray} setBrands={setBrands}/> \r\n            </header>\r\n            <section className=\"brands\">\r\n                {brands.map((brand,index) => (\r\n                    <Brand key={index} handleClick={(e, brand) => handleClick(e, brand)} selected={selectedBrands.includes(brand.slug)} brand={brand} />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\nexport default Content;","import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\nfunction App() {\n\n  return (\n    <> \n    <Sidebar /> \n    <Content />\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}